services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ghcrm
    ports:
      - 5434:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ghcrm"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend

  server:
    build:
      context: .
      dockerfile: apps/server/Dockerfile
    ports:
      - "4000:4000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/ghcrm
      - NODE_ENV=production
      - JWT_SECRET=secret123
      - CLIENT_URL=http://localhost:5000
      - PORT=4000
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend
    volumes: []

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    ports:
      - "5000:5000"
    environment:
      - NEXT_PUBLIC_NESTJS_SERVER=http://localhost:4000
      - NODE_ENV=production
      - PORT=5000
    depends_on:
      - server
    networks:
      - backend
    volumes: []

networks:
  backend:
    driver: bridge

volumes:
  postgres_data:
