version: "3.8"
services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ghcrm
    ports:
      - 5434:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ghcrm"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend

  server:
    build:
      context: .
      dockerfile: Dockerfile
      target: server
    working_dir: /app
    ports:
      - "4000:4000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/ghcrm
      - NODE_ENV=production
      - JWT_SECRET=secret123
      - CLIENT_URL=http://localhost:5000
      - PORT=4000
    networks:
      - backend
    volumes: []

  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: web
    working_dir: /app
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_NESTJS_SERVER=http://server:4000
    ports:
      - "5000:3000"
    depends_on:
      - server
    networks:
      - backend
    volumes: []

  deps:
    image: git-crm-app-deps:latest
    build:
      context: .
      dockerfile: Dockerfile
      target: deps
    profiles:
      - builder

  server-build:
    image: git-crm-app-server-build:latest
    build:
      context: .
      dockerfile: Dockerfile
      target: server-build
    depends_on:
      - deps
    profiles:
      - builder

  web-build:
    image: git-crm-app-web-build:latest
    build:
      context: .
      dockerfile: Dockerfile
      target: web-build
    depends_on:
      - server-build
    profiles:
      - builder

networks:
  backend:
    driver: bridge

volumes:
  postgres_data:
